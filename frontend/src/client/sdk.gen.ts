// This file is auto-generated by @hey-api/openapi-ts

import { type Options as ClientOptions, type TDataShape, type Client, formDataBodySerializer } from '@hey-api/client-fetch';
import type { GetFinancialChartFinancialChartPostData, GetFinancialChartFinancialChartPostResponse, GetFinancialChartFinancialChartPostError, GetSummarySummaryPostData, GetSummarySummaryPostResponse, GetSummarySummaryPostError, GetByCategoriesByCategoriesPostData, GetByCategoriesByCategoriesPostResponse, GetByCategoriesByCategoriesPostError, TransactionsTransactionsPostData, TransactionsTransactionsPostResponse, TransactionsTransactionsPostError, GetCurrencyCurrencyGetData, GetCurrencyCurrencyGetResponse, GetImportInfoImportInfoPostData, GetImportInfoImportInfoPostResponse, GetImportInfoImportInfoPostError, ImportTransactionsImportTransactionsPostData, ImportTransactionsImportTransactionsPostResponse, ImportTransactionsImportTransactionsPostError, ImportHistoryImportHistoryGetData, ImportHistoryImportHistoryGetResponse } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Get Financial Chart
 */
export const getFinancialChartFinancialChartPost = <ThrowOnError extends boolean = false>(options: Options<GetFinancialChartFinancialChartPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<GetFinancialChartFinancialChartPostResponse, GetFinancialChartFinancialChartPostError, ThrowOnError>({
        url: '/financial_chart',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Get Summary
 */
export const getSummarySummaryPost = <ThrowOnError extends boolean = false>(options: Options<GetSummarySummaryPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<GetSummarySummaryPostResponse, GetSummarySummaryPostError, ThrowOnError>({
        url: '/summary',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Get By Categories
 */
export const getByCategoriesByCategoriesPost = <ThrowOnError extends boolean = false>(options: Options<GetByCategoriesByCategoriesPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<GetByCategoriesByCategoriesPostResponse, GetByCategoriesByCategoriesPostError, ThrowOnError>({
        url: '/by_categories',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Transactions
 */
export const transactionsTransactionsPost = <ThrowOnError extends boolean = false>(options: Options<TransactionsTransactionsPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<TransactionsTransactionsPostResponse, TransactionsTransactionsPostError, ThrowOnError>({
        url: '/transactions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Get Currency
 */
export const getCurrencyCurrencyGet = <ThrowOnError extends boolean = false>(options?: Options<GetCurrencyCurrencyGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetCurrencyCurrencyGetResponse, unknown, ThrowOnError>({
        url: '/currency',
        ...options
    });
};

/**
 * Get Import Info
 */
export const getImportInfoImportInfoPost = <ThrowOnError extends boolean = false>(options: Options<GetImportInfoImportInfoPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<GetImportInfoImportInfoPostResponse, GetImportInfoImportInfoPostError, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/import/info',
        ...options,
        headers: {
            'Content-Type': null,
            ...options?.headers
        }
    });
};

/**
 * Import Transactions
 */
export const importTransactionsImportTransactionsPost = <ThrowOnError extends boolean = false>(options: Options<ImportTransactionsImportTransactionsPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<ImportTransactionsImportTransactionsPostResponse, ImportTransactionsImportTransactionsPostError, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/import/transactions',
        ...options,
        headers: {
            'Content-Type': null,
            ...options?.headers
        }
    });
};

/**
 * Import History
 */
export const importHistoryImportHistoryGet = <ThrowOnError extends boolean = false>(options?: Options<ImportHistoryImportHistoryGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ImportHistoryImportHistoryGetResponse, unknown, ThrowOnError>({
        url: '/import/history',
        ...options
    });
};